<?php
// Configure the look of your application, e.g. title
$app = array(
  'title' => "database-frontend",


  // when loading entries, load max. chunkSize at once (default: 100)
  chunkSize: 100,
);

//// Basic configuration ////
// $data_path - all user content (beside the database) will be saved there.
// It has to be writeable by the webserver. You might consider to use a
// directory outside the webserver accessible data for security reasons.
$data_path = "data/";

//// Configure database ////
// Example: SQLite
#$db = array(
#  'type' => 'sqlite',
#  'path' => "{$data_path}/db.db",
#);

// Example: MYSQL
#$db = array(
#  'type' => 'mysql',
#  'username' => 'USER',
#  'dbname' => 'DB',
#  'host' => 'localhost',
#  'password' => 'PASSWORD',
#);

/** EXTENSIONS **/
// after changing the list of extensions (array $modulekit_load),
// you have to re-run 'npm run build'

// Uncomment the following block to enable & configure Git History
#$modulekit_load[] = "history_git";
#$git = array(
#  'path' => "{$data_path}/git/",
#);

// Enable Markdown formatting
#$modulekit_load[] = "dbf-markdown";

// Enable quick editing (double-click on table fields)
#$modulekit_load[] = "quick_edit";

// Enable Inline Actions (e.g. buttons or links in table fields, which generate actions)
#$modulekit_load[] = "inline_actions";

// Enable the 'age' Twig filter (prints time since the date value)
#$modulekit_load[] = "dbf-age";

// Authentication configuration
// see https://github.com/plepe/modulekit-auth for more information
$auth_config = array(
  'domains' => array(
    'default' => array(
      'type'    => "htpasswd",
      'file'    => ".htpasswd"
    ),
    'some_ldap_domain'=>array(
      'type'    => "ldap",
      'host'    => 'ldap.example.com',
      'basedn'  => 'dc=example,dc=com',
      'userdn'  => 'ou=people,dc=example,dc=com',
      'groupdn' => 'ou=groups,dc=example,dc=com',
    ),
  ),
  'groups'=>array(
    'admin'=>array('user1@default', 'user2@default'),
  ),
  // when require-group is set, user needs to be a group member of the given
  // group to be able to login.
  #'require-group' => "admin",
  #'require-group' => "&group@default",
);

// groups my also be specified as 'user1@default' (where 'user1@default' is the
// only member) or '&group@default', where the domain is queried for the member
// list. You can also concatenate two or more users/groups together by
// separating by ';', e.g. 'user1@default;&group@default'
//
// To create .htpasswd file, use
// > htpasswd -c -d .htpasswd USERNAME
// To update a .htpasswd file, use:
// > htpasswd -d .htpasswd USERNAME
// Note: '-d' uses a weak password algorithm; other htpasswd algorithms are not
// compatible with PHP as of version 5.4

// The access configuration defines basic access rules.
// The following values can be used:
// * null: doesn't need any special access
// * '*': need to be logged in
// * 'user@domain': access is allowed only for user@domain
// * '&group@domain': access is allowed only for users which are members of the
//   group
// * 'group': access is allowed for members of the group 'group', which is
//   defined within the $auth_config above.
$base_access = array(
  'view' => true,  // who may view the content of the application
  'admin' => 'admin', // access to admin page
);

// default settings
$default_settings = array(
  'limit' => 0,
);


// Debugging
$debug = false;
